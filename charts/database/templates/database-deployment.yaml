{{- if eq .Values.global.databaseLocation "on-cluster" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-database
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: drycc-database
  template:
    metadata:
      labels:
        app: drycc-database
    spec:
      {{- include "common.affinities.pods.soft" (dict "key" "app" "values" (list "drycc-database")) | indent 6 }}
      serviceAccount: drycc-database
      initContainers:
      - name: drycc-database-init
        image: registry.drycc.cc/drycc/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
          - netcat
          - -v
          - -a
          - $(DRYCC_MINIO_SERVICE_HOST):$(DRYCC_MINIO_SERVICE_PORT)
      containers:
        - name: drycc-database
          image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/postgres:{{.Values.imageTag}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          ports:
            - containerPort: 5432
          {{- if or (.Values.limitsCpu) (.Values.limitsMemory)}}
          resources:
            limits:
              {{- if (.Values.limitsCpu) }}
              cpu: {{.Values.limitsCpu}}
              {{- end}}
              {{- if (.Values.limitsMemory) }}
              memory: {{.Values.limitsMemory}}
              {{- end}}
              {{- if (.Values.limitsHugepages2Mi) }}
              hugepages-2Mi: {{.Values.limitsHugepages2Mi}}
              {{- end}}
              {{- if (.Values.limitsHugepages1Gi) }}
              hugepages-1Gi: {{.Values.limitsHugepages1Gi}}
              {{- end}}
          {{- end}}
          env:
            - name: DATABASE_STORAGE
              value: "{{.Values.global.storage}}"
            - name: PGCTLTIMEOUT
              value: "{{.Values.timeout}}"
          lifecycle:
            preStop:
              exec:
                command:
                  - init-stack
                  - gosu
                  - postgres
                  - do_backup
          readinessProbe:
            exec:
              command:
                - init-stack
                - is_running
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: database-creds
              mountPath: /var/run/secrets/drycc/database/creds
            - name: objectstore-creds
              mountPath: /var/run/secrets/drycc/objectstore/creds
            {{- if .Values.persistence.enabled }}
            - name: database-data
              mountPath: /data
            {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: database-data
          persistentVolumeClaim:
            claimName: drycc-database
        {{- end }}
        - name: database-creds
          secret:
            secretName: database-creds
        - name: objectstore-creds
          secret:
            secretName: objectstorage-keyfile
{{- end }}
